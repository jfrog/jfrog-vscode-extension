{
    "name": "jfrog-vscode-extension",
    "displayName": "JFrog",
    "description": "JFrog Xray scanning of Go, npm, Pypi, Maven and NuGet project dependencies.",
    "version": "1.12.0",
    "license": "Apache-2.0",
    "icon": "resources/extensionIcon.png",
    "repository": {
        "type": "git",
        "url": "https://github.com/jfrog/jfrog-vscode-extension"
    },
    "homepage": "https://jfrog.github.io/jfrog-vscode-extension",
    "bugs": {
        "url": "https://github.com/jfrog/jfrog-vscode-extension/issues"
    },
    "publisher": "JFrog",
    "engines": {
        "vscode": "^1.37.0"
    },
    "categories": [
        "Other"
    ],
    "activationEvents": [
        "onStartupFinished"
    ],
    "main": "./dist/extension",
    "contributes": {
        "viewsWelcome": [
            {
                "view": "jfrog.xray",
                "contents": "Thank you for installing the JFrog extension. If you already have a JFrog environment, please [configure](command:jfrog.xray.connect) its connection details.\nDon't have a JFrog environment? [Get one for FREE](https://github.com/jfrog/jfrog-vscode-extension#set-up-a-free-jfrog-environment-in-the-cloud).",
                "when": "!areCredentialsSet"
            }
        ],
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "jfrog",
                    "title": "JFrog",
                    "icon": "resources/extensionIcon.png"
                }
            ]
        },
        "views": {
            "jfrog": [
                {
                    "id": "jfrog.xray",
                    "name": "Components Tree"
                },
                {
                    "id": "jfrog.xray.component",
                    "name": "Component Details"
                },
                {
                    "id": "jfrog.xray.issues",
                    "name": "Component Issues Details"
                }
            ]
        },
        "configuration": {
            "title": "JFrog",
            "properties": {
                "jfrog.xray.exclusions": {
                    "type": "string",
                    "default": "**/*{test,venv,node_modules,target}*",
                    "scope": "resource",
                    "markdownDescription": "A [glob pattern](https://code.visualstudio.com/api/references/vscode-api#GlobPattern) used to exclude specific paths from being scanned by JFrog Xray. For example, go.mod files under directories named testdata will not be scanned."
                },
                "jfrog.xray.watchers": {
                    "type": "boolean",
                    "default": "false",
                    "scope": "application",
                    "markdownDescription": "Automatically trigger a scan upon code changes in go.sum or package-lock.json. Change will take effect after reload."
                },
                "jfrog.xray.ciIntegration.buildNamePattern": {
                    "type": "string",
                    "default": "",
                    "scope": "resource",
                    "markdownDescription": "A wildcards pattern, to match the name of builds published to Artifactory. Only builds which match the pattern are visible under the CI tab."
                },
                "jfrog.projectKey": {
                    "type": "string",
                    "default": "",
                    "scope": "application",
                    "markdownDescription": "Optionally use the project key field to allow the security and license compliance information displayed in VS-Code, to reflect the security policies required by your organization. This is done as follows:\n\nCreate a [JFrog Project](https://www.jfrog.com/confluence/display/JFROG/Projects), or obtain the relevant JFrog Project key.\n\nCreate a [Policy](https://www.jfrog.com/confluence/display/JFROG/Creating+Xray+Policies+and+Rules) on JFrog Xray.\n\nCreate a [Watch](https://www.jfrog.com/confluence/display/JFROG/Configuring+Xray+Watches) on JFrog Xray and assign your Policy and Project as resources to it."
                },
                "jfrog.logLevel": {
                    "type": "string",
                    "default": "info",
                    "enum": [
                        "debug",
                        "info",
                        "warn",
                        "err"
                    ],
                    "scope": "application",
                    "markdownDescription": "The logging level the extension logs at, defaults to 'info'"
                },
                "jfrog.connectionRetries": {
                    "type": "number",
                    "default": 3,
                    "scope": "application",
                    "markdownDescription": "Maximum connection retry attempts"
                }
            }
        },
        "commands": [
            {
                "command": "jfrog.xray.refresh",
                "title": "Refresh",
                "icon": {
                    "light": "resources/light/refresh.png",
                    "dark": "resources/dark/refresh.png"
                },
                "enablement": "areCredentialsSet && !scanInProgress"
            },
            {
                "command": "jfrog.xray.connect",
                "title": "Connect",
                "icon": "resources/connect.png"
            },
            {
                "command": "jfrog.xray.disconnect",
                "title": "Disconnect",
                "icon": "resources/disconnect.png",
                "enablement": "!scanInProgress"
            },
            {
                "command": "jfrog.xray.filter",
                "title": "Filter",
                "icon": {
                    "light": "resources/light/filter.png",
                    "dark": "resources/dark/filter.png"
                },
                "enablement": "areCredentialsSet && !scanInProgress"
            },
            {
                "command": "jfrog.xray.showInProjectDesc",
                "title": "Show in project descriptor",
                "icon": "$(eye)"
            },
            {
                "command": "jfrog.xray.excludeDependency",
                "title": "Exclude dependency",
                "icon": "$(exclude)"
            },
            {
                "command": "jfrog.xray.updateDependency",
                "title": "Update dependency to fixed version",
                "icon": "$(arrow-up)"
            },
            {
                "command": "jfrog.xray.copyToClipboard",
                "title": "Copy"
            },
            {
                "command": "jfrog.xray.builds",
                "title": "Select build to display",
                "icon": {
                    "light": "resources/light/build.png",
                    "dark": "resources/dark/build.png"
                }
            },
            {
                "command": "jfrog.xray.local",
                "title": "Switch to local mode",
                "icon": "$(home)",
                "enablement": "!scanInProgress"
            },
            {
                "command": "jfrog.xray.ci",
                "title": "Switch to CI mode",
                "icon": {
                    "light": "resources/light/ci.png",
                    "dark": "resources/dark/ci.png"
                },
                "enablement": "!scanInProgress"
            },
            {
                "command": "jfrog.xray.export",
                "title": "Export",
                "icon": "$(link-external)",
                "enablement": "!scanInProgress"
            }
        ],
        "menus": {
            "view/title": [
                {
                    "command": "jfrog.xray.builds",
                    "when": "view == jfrog.xray && isCi",
                    "group": "navigation@0"
                },
                {
                    "command": "jfrog.xray.local",
                    "when": "view == jfrog.xray && isCi",
                    "group": "navigation@1"
                },
                {
                    "command": "jfrog.xray.ci",
                    "when": "view == jfrog.xray && isLocal",
                    "group": "navigation@1"
                },
                {
                    "command": "jfrog.xray.connect",
                    "when": "view == jfrog.xray && !areCredentialsSet",
                    "group": "navigation@2"
                },
                {
                    "command": "jfrog.xray.disconnect",
                    "when": "view == jfrog.xray && areCredentialsSet",
                    "group": "navigation@2"
                },
                {
                    "command": "jfrog.xray.filter",
                    "when": "view == jfrog.xray",
                    "group": "navigation@3"
                },
                {
                    "command": "jfrog.xray.refresh",
                    "when": "view == jfrog.xray",
                    "group": "navigation@4"
                },
                {
                    "command": "jfrog.xray.export",
                    "when": "view == jfrog.xray && isLocal",
                    "group": "navigation@5"
                }
            ],
            "view/item/context": [
                {
                    "command": "jfrog.xray.showInProjectDesc",
                    "when": "viewItem =~ /jfrog.xray.showInProjectDesc.enabled/",
                    "group": "inline"
                },
                {
                    "command": "jfrog.xray.excludeDependency",
                    "when": "viewItem =~ /jfrog.xray.excludeDependency.enabled/",
                    "group": "inline"
                },
                {
                    "command": "jfrog.xray.updateDependency",
                    "when": "viewItem =~ /jfrog.xray.updateDependency.enabled/",
                    "group": "inline"
                },
                {
                    "command": "jfrog.xray.copyToClipboard"
                }
            ]
        },
        "jsonValidation": [
            {
                "fileMatch": [
                    "**/filespecs/*.json",
                    "*filespec*.json",
                    "*.filespec"
                ],
                "url": "https://github.com/jfrog/jfrog-cli/raw/v2/schema/filespec-schema.json"
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "webpack --mode production",
        "webpack": "webpack --mode development",
        "webpack-dev": "webpack --mode development --watch",
        "format": "prettier --write \"src/**/*.ts\" \"package.json\" \"tsconfig.json\" \".eslintrc.js\"",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "lint": "eslint -c .eslintrc.js --ext .ts src",
        "pretest": "npm run compile",
        "test": "node ./out/test/runTest.js",
        "package": "vsce package"
    },
    "dependencies": {
        "adm-zip": "~0.5.5",
        "fs-extra": "~10.0.0",
        "jfrog-client-js": "github:yahavi/jfrog-client-js#retries",
        "json2csv": "^5.0.7",
        "keytar": "~7.9.0",
        "nuget-deps-tree": "^0.2.2",
        "original-fs": "^1.1.0",
        "p-queue": "^6.6.2",
        "retries": "^1.0.0",
        "semver": "~7.3.5",
        "typescript-collections": "~1.3.3",
        "walkdir": "^0.4.1",
        "xmlbuilder2": "~3.0.2"
    },
    "devDependencies": {
        "@faker-js/faker": "^6.0.0-alpha.7",
        "@types/adm-zip": "^0.4.34",
        "@types/chai": "^4.2.21",
        "@types/fs-extra": "^9.0.12",
        "@types/glob": "^7.1.4",
        "@types/json2csv": "^5.0.3",
        "@types/mocha": "^9.0.0",
        "@types/semver": "^7.3.8",
        "@types/tmp": "^0.2.1",
        "@types/vscode": "1.37.0",
        "@typescript-eslint/eslint-plugin": "^5.0.0",
        "@typescript-eslint/parser": "^5.0.0",
        "chai": "^4.3.4",
        "eslint": "^8.1.0",
        "eslint-config-prettier": "^8.3.0",
        "glob": "^7.1.7",
        "mocha": "^9.1.3",
        "ovsx": "^0.2.1",
        "prettier": "^1.19.1",
        "tmp": "^0.2.1",
        "ts-loader": "^9.2.5",
        "typescript": "^4.3.5",
        "vsce": "^1.103.0",
        "vscode-test": "^1.6.1",
        "webpack": "^5.49.0",
        "webpack-cli": "^4.7.2"
    },
    "keywords": [
        "go",
        "js",
        "ts",
        "npm",
        "scan",
        ".net",
        "xray",
        "jfrog",
        "maven",
        "nuget",
        "devops",
        "golang",
        "nodejs",
        "python",
        "dotnet",
        "gocenter",
        "security",
        "devsecops",
        "javascript",
        "typescript",
        "artifactory",
        "vulnerabilities"
    ]
}
