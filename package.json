{
    "name": "jfrog-vscode-extension",
    "displayName": "JFrog",
    "description": "JFrog Xray scanning of Go, npm, Pypi, Maven and NuGet project dependencies.",
    "version": "2.0.3",
    "license": "Apache-2.0",
    "icon": "resources/extensionIcon.png",
    "repository": {
        "type": "git",
        "url": "https://github.com/jfrog/jfrog-vscode-extension"
    },
    "homepage": "https://jfrog.github.io/jfrog-vscode-extension",
    "bugs": {
        "url": "https://github.com/jfrog/jfrog-vscode-extension/issues"
    },
    "publisher": "JFrog",
    "engines": {
        "vscode": "^1.64.2"
    },
    "categories": [
        "Other"
    ],
    "activationEvents": [
        "onStartupFinished"
    ],
    "main": "./dist/extension",
    "contributes": {
        "viewsWelcome": [
            {
                "view": "jfrog.issues",
                "contents": "üê∏ Thank you for installing the JFrog VS Code extension üê∏\nWith this extension, you can scan your workspace for security issues.\nFeatures:\n* The project dependencies are scanned for security issues.\n* For Python, npm and yarn Xray's [Contextual Analysis](https://www.jfrog.com/confluence/display/JFROG/Vulnerability+Contextual+Analysis) scan will help you determine which security issues impact your code and which don't, by marking them as Applicable and Non Applicable.\n* The security issues are marked in the editor for easy visibility.\n* The entire list of security issues are displayed in the JFrog tab.\n* For security issues with a known fix version, the extension allows an upgrade to this version.\n* For some security issues, with Xray's CVE Research and Enrichment, get detailed technical information and enhanced analysis on CVEs to allow you to focus on the most important issues.\n* An Impact Graph is displayed for impacted project dependencies.\n* Displays the status of your project while it is being built and tested by the CI.\nLet's get started:\n[Enter your JFrog Platform connection details](command:jfrog.xray.connect)\n[Let us create a FREE JFrog Platform for you](https://github.com/jfrog/jfrog-vscode-extension#set-up-a-free-jfrog-environment-in-the-cloud)",
                "when": "jfrog.connection.status == signedOut || !jfrog.connection.status"
            },
            {
                "view": "jfrog.issues",
                "contents": "Your project is ready to be scanned for security issues.\nIf your JFrog subscription includes Advanced DevSecOps enabled, we will also run Contextual Analysis scans for CVE applicability, to determine whether your code is actually impacted by the vulnerable dependency, to learn more about this feature, see [Xray Advanced Scans](https://www.jfrog.com/confluence/display/JFROG/Xray+Advanced+Scans).\n[Scan](command:jfrog.xray.refresh)",
                "when": "jfrog.connection.status == signedIn && jfrog.firstScanInWorkspace"
            },
            {
                "view": "jfrog.issues",
                "contents": "Your project was scanned and we didn't find any security issues.\n[Rescan](command:jfrog.xray.refresh)",
                "when": "jfrog.connection.status == signedIn && !jfrog.firstScanInWorkspace"
            }
        ],
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "jfrog",
                    "title": "JFrog",
                    "icon": "resources/extensionIcon.png"
                }
            ]
        },
        "views": {
            "jfrog": [
                {
                    "id": "jfrog.xray.ci.issues",
                    "name": "CI",
                    "when": "isCi"
                },
                {
                    "id": "jfrog.xray.ci.issues.details",
                    "name": "Details",
                    "when": "isCi"
                },
                {
                    "id": "jfrog.issues",
                    "name": "Issues",
                    "when": "isLocal"
                }
            ]
        },
        "configuration": {
            "title": "JFrog",
            "properties": {
                "jfrog.xray.exclusions": {
                    "type": "string",
                    "default": "**/*{test,venv,node_modules,target}*",
                    "scope": "resource",
                    "pattern": "^\\*\\*/\\*\\{([^{},]+,?)+\\}\\*$",
                    "markdownDescription": "A [glob pattern](https://code.visualstudio.com/api/references/vscode-api#GlobPattern) used to exclude specific paths from being scanned by JFrog Xray. For example, go.mod files under directories named testdata will not be scanned."
                },
                "jfrog.xray.ciIntegration.buildNamePattern": {
                    "type": "string",
                    "scope": "resource",
                    "markdownDescription": "A wildcards pattern, to match the name of builds published to Artifactory. Only builds which match the pattern are visible under the CI tab."
                },
                "jfrog.projectKey": {
                    "type": "string",
                    "scope": "application",
                    "markdownDescription": "Optionally use the Project Key field to allow the security and license compliance information displayed in VS-Code, to reflect the security policies required by your organization. This is done as follows:\n\nCreate a [JFrog Project](https://www.jfrog.com/confluence/display/JFROG/Projects), or obtain the relevant JFrog Project key.\n\nCreate a [Policy](https://www.jfrog.com/confluence/display/JFROG/Creating+Xray+Policies+and+Rules) on JFrog Xray.\n\nCreate a [Watch](https://www.jfrog.com/confluence/display/JFROG/Configuring+Xray+Watches) on JFrog Xray and assign your Policy and Project as resources to it."
                },
                "jfrog.watches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "scope": "application",
                    "markdownDescription": "Add one or more Xray Watches, to reflect the security policies required by your organization.\n\nIf both ‚ÄúProject Key‚Äù and ‚ÄúWatches‚Äù are configured, VS Code will use the configured Watches, and not the Project Key to determine the policy for the security scanning."
                },
                "jfrog.logLevel": {
                    "type": "string",
                    "default": "info",
                    "enum": [
                        "debug",
                        "info",
                        "warn",
                        "err"
                    ],
                    "scope": "application",
                    "markdownDescription": "The logging level the extension logs at, defaults to 'info'"
                },
                "jfrog.connectionRetries": {
                    "type": "number",
                    "default": 3,
                    "scope": "application",
                    "markdownDescription": "Maximum connection retry attempts"
                }
            }
        },
        "commands": [
            {
                "command": "jfrog.xray.refresh",
                "title": "Refresh",
                "icon": {
                    "light": "resources/light/refresh.png",
                    "dark": "resources/dark/refresh.png"
                },
                "category": "JFrog",
                "enablement": "jfrog.connection.status == signedIn && !jfrog.scanInProgress"
            },
            {
                "command": "jfrog.xray.connect",
                "title": "Connect",
                "icon": "resources/readme/connect.png",
                "category": "JFrog",
                "enablement": "!jfrog.scanInProgress"
            },
            {
                "command": "jfrog.xray.disconnect",
                "title": "Disconnect",
                "icon": "$(debug-disconnect)",
                "category": "JFrog",
                "enablement": "!jfrog.scanInProgress"
            },
            {
                "command": "jfrog.xray.filter",
                "title": "Filter",
                "icon": {
                    "light": "resources/light/filter.png",
                    "dark": "resources/dark/filter.png"
                },
                "category": "JFrog",
                "enablement": "jfrog.connection.status == signedIn && !jfrog.scanInProgress && isCi"
            },
            {
                "command": "jfrog.issues.open.ignore",
                "title": "Add ignore rule",
                "icon": "$(eye-closed)",
                "enablement": "viewItem =~ /jfrog.issues.open.ignore.enabled/"
            },
            {
                "command": "jfrog.xray.copyToClipboard",
                "title": "Copy",
                "enablement": "viewItem =~ /jfrog.item.copy.to.clipboard/"
            },
            {
                "command": "jfrog.xray.builds",
                "title": "Select build to display",
                "icon": {
                    "light": "resources/light/build.png",
                    "dark": "resources/dark/build.png"
                },
                "category": "JFrog",
                "enablement": "isCi"
            },
            {
                "command": "jfrog.xray.local",
                "title": "Switch to local mode",
                "icon": "$(home)",
                "category": "JFrog",
                "enablement": "jfrog.connection.status == signedIn && !jfrog.scanInProgress && isCi"
            },
            {
                "command": "jfrog.xray.ci",
                "title": "Switch to CI mode",
                "icon": {
                    "light": "resources/light/ci.png",
                    "dark": "resources/dark/ci.png"
                },
                "category": "JFrog",
                "enablement": "jfrog.connection.status == signedIn && !jfrog.scanInProgress && isLocal"
            }
        ],
        "menus": {
            "view/title": [
                {
                    "command": "jfrog.xray.connect",
                    "when": "jfrog.connection.status != signedIn && view =~ /^jfrog.issues$|^jfrog.xray.ci.issues$/",
                    "group": "navigation@0"
                },
                {
                    "command": "jfrog.xray.disconnect",
                    "when": "jfrog.connection.status == signedIn && view =~ /^jfrog.issues$|^jfrog.xray.ci.issues$/",
                    "group": "navigation@0"
                },
                {
                    "command": "jfrog.xray.refresh",
                    "when": "view == jfrog.xray.ci.issues || view == jfrog.issues",
                    "group": "navigation@1"
                },
                {
                    "command": "jfrog.xray.filter",
                    "when": "view == jfrog.xray.ci.issues",
                    "group": "navigation@2"
                },
                {
                    "command": "jfrog.xray.local",
                    "when": "view == jfrog.xray.ci.issues && isCi",
                    "group": "navigation@3"
                },
                {
                    "command": "jfrog.xray.ci",
                    "when": "view == jfrog.issues && isLocal",
                    "group": "navigation@3"
                },
                {
                    "command": "jfrog.xray.builds",
                    "when": "view == jfrog.xray.ci.issues && isCi",
                    "group": "navigation@4"
                }
            ],
            "view/item/context": [
                {
                    "command": "jfrog.issues.open.ignore",
                    "when": "viewItem =~ /jfrog.issues.open.ignore.enabled/",
                    "group": "inline"
                },
                {
                    "command": "jfrog.xray.copyToClipboard",
                    "when": "viewItem =~ /jfrog.item.copy.to.clipboard/"
                }
            ]
        },
        "jsonValidation": [
            {
                "fileMatch": [
                    "**/filespecs/*.json",
                    "*filespec*.json",
                    "*.filespec"
                ],
                "url": "https://github.com/jfrog/jfrog-cli/raw/v2/schema/filespec-schema.json"
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "rm -rf dist && webpack --mode production && cp -r node_modules/jfrog-ide-webview/build dist/jfrog-ide-webview",
        "webpack": "rm -rf dist && webpack --mode development && cp -r node_modules/jfrog-ide-webview/build dist/jfrog-ide-webview",
        "format": "prettier --write \"src/**/*.ts\" \"package.json\" \"tsconfig.json\" \".eslintrc.js\"",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "lint": "eslint -c .eslintrc.js --ext .ts src",
        "pretest": "npm run compile",
        "test": "node ./out/test/runTest.js",
        "package": "vsce package"
    },
    "dependencies": {
        "adm-zip": "~0.5.9",
        "fs-extra": "~10.1.0",
        "jfrog-client-js": "^2.6.3",
        "jfrog-ide-webview": "https://releases.jfrog.io/artifactory/ide-webview-npm/jfrog-ide-webview/-/jfrog-ide-webview-0.1.20.tgz",
        "js-yaml": "^4.1.0",
        "json2csv": "~5.0.7",
        "keytar": "~7.9.0",
        "nuget-deps-tree": "^0.2.2",
        "original-fs": "~1.1.0",
        "p-queue": "~6.6.2",
        "retries": "~1.0.0",
        "semver": "~7.3.7",
        "typescript-collections": "~1.3.3",
        "walkdir": "~0.4.1",
        "xmlbuilder2": "~3.0.2"
    },
    "devDependencies": {
        "@faker-js/faker": "^7.1.0",
        "@types/adm-zip": "^0.5.0",
        "@types/chai": "^4.3.1",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/js-yaml": "^4.0.5",
        "@types/json2csv": "^5.0.3",
        "@types/mocha": "^9.1.1",
        "@types/semver": "^7.3.9",
        "@types/tmp": "^0.2.3",
        "@types/vscode": "1.64.0",
        "@typescript-eslint/eslint-plugin": "^5.27.0",
        "@typescript-eslint/parser": "^5.27.0",
        "chai": "^4.3.6",
        "eslint": "^8.16.0",
        "eslint-config-prettier": "^8.5.0",
        "glob": "^8.0.3",
        "mocha": "^10.0.0",
        "nock": "^13.2.7",
        "ovsx": "^0.5.0",
        "prettier": "^1.19.1",
        "tmp": "^0.2.1",
        "ts-loader": "^9.3.0",
        "typescript": "^4.7.2",
        "vsce": "^2.9.0",
        "vscode-test": "^1.6.1",
        "webpack": "^5.76.0",
        "webpack-cli": "^4.9.2"
    },
    "keywords": [
        "go",
        "js",
        "ts",
        "npm",
        "scan",
        ".net",
        "xray",
        "jfrog",
        "maven",
        "nuget",
        "devops",
        "golang",
        "nodejs",
        "python",
        "dotnet",
        "security",
        "devsecops",
        "javascript",
        "typescript",
        "artifactory",
        "vulnerabilities"
    ]
}
