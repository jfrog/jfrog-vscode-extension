{
    "name": "jfrog-vscode-extension",
    "displayName": "JFrog",
    "description": "JFrog Xray scanning of Go, npm, Pypi, Maven and NuGet project dependencies.",
    "version": "1.14.1",
    "license": "Apache-2.0",
    "icon": "resources/extensionIcon.png",
    "repository": {
        "type": "git",
        "url": "https://github.com/jfrog/jfrog-vscode-extension"
    },
    "homepage": "https://jfrog.github.io/jfrog-vscode-extension",
    "bugs": {
        "url": "https://github.com/jfrog/jfrog-vscode-extension/issues"
    },
    "publisher": "JFrog",
    "engines": {
        "vscode": "^1.37.0"
    },
    "categories": [
        "Other"
    ],
    "activationEvents": [
        "onStartupFinished"
    ],
    "main": "./dist/extension",
    "contributes": {
        "viewsWelcome": [
            {
                "view": "jfrog.xray",
                "contents": "Thank you for installing the JFrog extension üê∏\nIf you already have a JFrog Platform, please connect it to VS Code:\n[Connect to JFrog platform](command:jfrog.xray.connect)\nDon't have a JFrog Platform? [Get one for FREE](https://github.com/jfrog/jfrog-vscode-extension#set-up-a-free-jfrog-environment-in-the-cloud) ",
                "when": "jfrog.connection.status == signedOut || !jfrog.connection.status"
            },
            {
                "view": "jfrog.xray",
                "contents": "Couldn't connect to your JFrog Platform. \n[Reconnect](command:jfrog.xray.reConnect)\n[Reset your connection details](command:jfrog.xray.resetConnection)",
                "when": "jfrog.connection.status == connectionLost "
            },
            {
                "view": "jfrog.source.code.scan",
                "contents": "This view displays the results of applicability scanning of CVEs in the code. Python, npm, and yarn are currently supported."
            }
        ],
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "jfrog",
                    "title": "JFrog",
                    "icon": "resources/extensionIcon.png"
                }
            ]
        },
        "views": {
            "jfrog": [
                {
                    "id": "jfrog.xray",
                    "name": "Dependencies"
                },
                {
                    "id": "jfrog.xray.dependency.details",
                    "name": "Dependency Details"
                },
                {
                    "id": "jfrog.source.code.scan",
                    "name": "Code Vulnerabilities",
                    "when": "false"
                }
            ]
        },
        "configuration": {
            "title": "JFrog",
            "properties": {
                "jfrog.xray.exclusions": {
                    "type": "string",
                    "default": "**/*{test,venv,node_modules,target}*",
                    "scope": "resource",
                    "markdownDescription": "A [glob pattern](https://code.visualstudio.com/api/references/vscode-api#GlobPattern) used to exclude specific paths from being scanned by JFrog Xray. For example, go.mod files under directories named testdata will not be scanned."
                },
                "jfrog.xray.watchers": {
                    "type": "boolean",
                    "default": "false",
                    "scope": "application",
                    "markdownDescription": "Automatically trigger a scan upon code changes in go.sum or package-lock.json. Change will take effect after reload."
                },
                "jfrog.xray.ciIntegration.buildNamePattern": {
                    "type": "string",
                    "scope": "resource",
                    "markdownDescription": "A wildcards pattern, to match the name of builds published to Artifactory. Only builds which match the pattern are visible under the CI tab."
                },
                "jfrog.projectKey": {
                    "type": "string",
                    "scope": "application",
                    "markdownDescription": "Optionally use the Project Key field to allow the security and license compliance information displayed in VS-Code, to reflect the security policies required by your organization. This is done as follows:\n\nCreate a [JFrog Project](https://www.jfrog.com/confluence/display/JFROG/Projects), or obtain the relevant JFrog Project key.\n\nCreate a [Policy](https://www.jfrog.com/confluence/display/JFROG/Creating+Xray+Policies+and+Rules) on JFrog Xray.\n\nCreate a [Watch](https://www.jfrog.com/confluence/display/JFROG/Configuring+Xray+Watches) on JFrog Xray and assign your Policy and Project as resources to it."
                },
                "jfrog.watches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "scope": "application",
                    "markdownDescription": "Add one or more Xray Watches, to reflect the security policies required by your organization.\n\nIf both ‚ÄúProject Key‚Äù and ‚ÄúWatches‚Äù are configured, VS Code will use the configured Watches, and not the Project Key to determine the policy for for the security scanning."
                },
                "jfrog.logLevel": {
                    "type": "string",
                    "default": "info",
                    "enum": [
                        "debug",
                        "info",
                        "warn",
                        "err"
                    ],
                    "scope": "application",
                    "markdownDescription": "The logging level the extension logs at, defaults to 'info'"
                },
                "jfrog.connectionRetries": {
                    "type": "number",
                    "default": 3,
                    "scope": "application",
                    "markdownDescription": "Maximum connection retry attempts"
                }
            }
        },
        "commands": [
            {
                "command": "jfrog.xray.refresh",
                "title": "Refresh",
                "icon": {
                    "light": "resources/light/refresh.png",
                    "dark": "resources/dark/refresh.png"
                },
                "enablement": "jfrog.connection.status == signedIn && !jfrog.scanInProgress"
            },
            {
                "command": "jfrog.source.code.scan.refresh",
                "title": "Refresh",
                "icon": {
                    "light": "resources/light/refresh.png",
                    "dark": "resources/dark/refresh.png"
                },
                "enablement": "jfrog.connection.status == signedIn && !jfrog.scanInProgress"
            },
            {
                "command": "jfrog.xray.disconnect",
                "title": "Disconnect",
                "icon": "$(debug-disconnect)",
                "enablement": "jfrog.connection.status != signedOut && !jfrog.scanInProgress"
            },
            {
                "command": "jfrog.xray.filter",
                "title": "Filter",
                "icon": {
                    "light": "resources/light/filter.png",
                    "dark": "resources/dark/filter.png"
                },
                "enablement": "jfrog.connection.status == signedIn && !jfrog.scanInProgress"
            },
            {
                "command": "jfrog.xray.showInProjectDesc",
                "title": "Show in project descriptor",
                "icon": "$(eye)"
            },
            {
                "command": "jfrog.xray.excludeDependency",
                "title": "Exclude dependency",
                "icon": "$(exclude)"
            },
            {
                "command": "jfrog.xray.updateDependency",
                "title": "Update dependency to fixed version",
                "icon": "$(arrow-up)"
            },
            {
                "command": "jfrog.source.code.scan.jumpToSource",
                "title": "Jump To Source",
                "icon": "$(eye)"
            },
            {
                "command": "jfrog.xray.copyToClipboard",
                "title": "Copy"
            },
            {
                "command": "jfrog.xray.builds",
                "title": "Select build to display",
                "icon": {
                    "light": "resources/light/build.png",
                    "dark": "resources/dark/build.png"
                }
            },
            {
                "command": "jfrog.xray.local",
                "title": "Switch to local mode",
                "icon": "$(home)",
                "enablement": "jfrog.connection.status == signedIn && !jfrog.scanInProgress"
            },
            {
                "command": "jfrog.xray.ci",
                "title": "Switch to CI mode",
                "icon": {
                    "light": "resources/light/ci.png",
                    "dark": "resources/dark/ci.png"
                },
                "enablement": "jfrog.connection.status == signedIn && !jfrog.scanInProgress"
            },
            {
                "command": "jfrog.xray.export",
                "title": "Export",
                "icon": "$(link-external)",
                "enablement": "jfrog.connection.status == signedIn && !jfrog.scanInProgress"
            }
        ],
        "menus": {
            "view/title": [
                {
                    "command": "jfrog.xray.disconnect",
                    "when": "view == jfrog.xray && jfrog.connection.status != signedOut",
                    "group": "navigation@0"
                },
                {
                    "command": "jfrog.xray.refresh",
                    "when": "view == jfrog.xray",
                    "group": "navigation@1"
                },
                {
                    "command": "jfrog.xray.filter",
                    "when": "view == jfrog.xray",
                    "group": "navigation@2"
                },
                {
                    "command": "jfrog.xray.local",
                    "when": "view == jfrog.xray && isCi",
                    "group": "navigation@3"
                },
                {
                    "command": "jfrog.xray.ci",
                    "when": "view == jfrog.xray && isLocal",
                    "group": "navigation@3"
                },
                {
                    "command": "jfrog.xray.export",
                    "when": "view == jfrog.xray && isLocal",
                    "group": "navigation@4"
                },
                {
                    "command": "jfrog.xray.builds",
                    "when": "view == jfrog.xray && isCi",
                    "group": "navigation@5"
                }
            ],
            "view/item/context": [
                {
                    "command": "jfrog.xray.showInProjectDesc",
                    "when": "viewItem =~ /jfrog.xray.showInProjectDesc.enabled/",
                    "group": "inline"
                },
                {
                    "command": "jfrog.source.code.scan.jumpToSource",
                    "when": "viewItem =~ /jfrog.source.code.scan.jumpToSource.enabled/",
                    "group": "inline"
                },
                {
                    "command": "jfrog.xray.excludeDependency",
                    "when": "viewItem =~ /jfrog.xray.excludeDependency.enabled/",
                    "group": "inline"
                },
                {
                    "command": "jfrog.xray.updateDependency",
                    "when": "viewItem =~ /jfrog.xray.updateDependency.enabled/",
                    "group": "inline"
                },
                {
                    "command": "jfrog.xray.copyToClipboard"
                }
            ]
        },
        "jsonValidation": [
            {
                "fileMatch": [
                    "**/filespecs/*.json",
                    "*filespec*.json",
                    "*.filespec"
                ],
                "url": "https://github.com/jfrog/jfrog-cli/raw/v2/schema/filespec-schema.json"
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "webpack --mode production",
        "webpack": "webpack --mode development",
        "webpack-dev": "webpack --mode development --watch",
        "format": "prettier --write \"src/**/*.ts\" \"package.json\" \"tsconfig.json\" \".eslintrc.js\"",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "lint": "eslint -c .eslintrc.js --ext .ts src",
        "pretest": "npm run compile",
        "test": "node ./out/test/runTest.js",
        "package": "vsce package"
    },
    "dependencies": {
        "adm-zip": "~0.5.9",
        "fs-extra": "~10.1.0",
        "jfrog-client-js": "^2.6.0",
        "json2csv": "~5.0.7",
        "keytar": "~7.9.0",
        "nuget-deps-tree": "^0.2.2",
        "original-fs": "~1.1.0",
        "p-queue": "~6.6.2",
        "retries": "~1.0.0",
        "semver": "~7.3.7",
        "typescript-collections": "~1.3.3",
        "walkdir": "~0.4.1",
        "xmlbuilder2": "~3.0.2"
    },
    "devDependencies": {
        "@faker-js/faker": "^7.1.0",
        "@types/adm-zip": "^0.5.0",
        "@types/chai": "^4.3.1",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/json2csv": "^5.0.3",
        "@types/mocha": "^9.1.1",
        "@types/semver": "^7.3.9",
        "@types/tmp": "^0.2.3",
        "@types/vscode": "1.37.0",
        "@typescript-eslint/eslint-plugin": "^5.27.0",
        "@typescript-eslint/parser": "^5.27.0",
        "chai": "^4.3.6",
        "eslint": "^8.16.0",
        "eslint-config-prettier": "^8.5.0",
        "glob": "^8.0.3",
        "mocha": "^10.0.0",
        "nock": "^13.2.7",
        "ovsx": "^0.5.0",
        "prettier": "^1.19.1",
        "tmp": "^0.2.1",
        "ts-loader": "^9.3.0",
        "typescript": "^4.7.2",
        "vsce": "^2.9.0",
        "vscode-test": "^1.6.1",
        "webpack": "^5.72.1",
        "webpack-cli": "^4.9.2"
    },
    "keywords": [
        "go",
        "js",
        "ts",
        "npm",
        "scan",
        ".net",
        "xray",
        "jfrog",
        "maven",
        "nuget",
        "devops",
        "golang",
        "nodejs",
        "python",
        "dotnet",
        "security",
        "devsecops",
        "javascript",
        "typescript",
        "artifactory",
        "vulnerabilities"
    ]
}
